"""
NOTE: DASH ('-') IN SPEAKER IDS ARE REMOVED:
ORIGINAL FORMAT: xxx-x, OUR FORMAT: xxxx

see get_utt() below
"""

# dementia = [
#     '0870', '0290', '2440', '2820', '5780', '1441', '1200', '2031', '2371', '1811', '6480', '3380',
#     '1342', '2712', '1250', '0073', '3190', '5950', '6390', '2702', '5290', '4661', '1830', '2701',
#     '2690', '6740', '1340', '5440', '6720', '2051', '1440', '0781', '1841', '1343', '4931', '3810',
#     '1202', '0512', '7050', '0232', '3421', '7070', '0910', '0332', '1541', '1840', '2931', '0142',
#     '0070', '6630', '4680', '1220', '6150', '3390', '0331', '3570', '4701', '0500', '4881', '4500',
#     '3370', '5910', '1842', '0513', '2691', '2892', '0030', '5800', '0104', '0942', '6100', '3690',
#     '1270', '5980', '1681', '2123', '2352', '6090', '0583', '7030', '0760', '2572', '4710', '2372',
#     '1723', '2831', '0330', '2220', '5300', '0572', '0291', '4580', '0102', '0531', '2570', '3501',
#     '0511', '6500', '3811', '4501', '2180', '3610', '0912', '0762', '4970', '0493', '1203', '2912',
#     '6240', '6560', '0671', '0911', '0163', '3442', '0050', '5940', '2201', '3621', '5620', '3110',
#     '0584', '1204', '1540', '0660', '3430', '2760', '3550', '0052', '0071', '5730', '3500', '2520',
#     '0580', '6070', '0164', '3581', '1641', '0012', '3460', '5081', '4740', '6420', '1813', '6980',
#     '0350', '0510', '6600', '1831', '5810', '2700', '6890', '2640', '2132', '4760', '0570', '0242',
#     '1572', '2380', '0430', '5080', '0160', '1832', '3580', '0971', '3420', '0941', '1571', '6010',
#     '6510', '4880', '2120', '2821', '7140', '1643', '3290', '2212', '0571', '4660', '5850', '3100',
#     '5510', '4650', '0300', '5110', '3340', '0230', '1570', '0351', '2181', '0101', '1221', '0100',
#     '1722', '2200', '0610', '0780', '1833', '0390', '3491', '2121', '0301', '6400', '1780', '0651',
#     '3060', '5920', '5441', '2221', '1480', '2360', '1201', '4930', '5790', '2601', '2830', '6200',
#     '2161', '0334', '3551', '4610', '0491', '5060', '5151', '2791', '3680', '2210', '3490', '0241',
#     '7110', '0581', '2790', '0460', '2230', '7020', '1781', '3620', '5270', '0890', '0943', '2070',
#     '0161', '0702', '3560', '2133', '1810', '6810', '6950', '2060', '2470', '0611', '4971', '2822',
#     '6900', '2030', '2680', '1812', '3540', '1731', '5590', '2521', '2231', '6570', '0462', '2602',
#     '2911', '5271', '2122', '1721', '3440', '0490', '2211', '0400', '5280', '2350', '6350', '2160',
#     '0672', '0871', '5040', '5630', '4920', '1642', '0652', '5870', '3410', '3561', '2260', '1680',
#     '0010', '0333', '2131', '0180', '3251', '0650', '5390', '6760', '3341', '1341', '2213', '7040',
#     '6360', '2522', '0103', '3250', '0764', '3600', '4720', '5261', '2340'
# ]
# control = [
#     '2093', '2742', '0341', '1381', '0563', '7092', '0063', '0424', '6270', '1501', '6780', '2422',
#     '1582', '2550', '0450', '1321', '2751', '1301', '6880', '2991', '2420', '2561', '2800', '0133',
#     '1283', '2292', '2661', '2660', '3221', '2480', '1411', '2951', '1051', '2102', '2801', '2670',
#     '0863', '0922', '0340', '1410', '0281', '1453', '1371', '0560', '3181', '0153', '0921', '2450',
#     '1750', '0344', '7090', '0733', '1144', '1291', '0861', '6310', '1241', '0174', '1132', '2802',
#     '2750', '1661', '1182', '0712', '1320', '1130', '1550', '0421', '6860', '1753', '2482', '1240',
#     '0023', '3042', '1920', '0210', '3180', '0422', '1710', '0680', '0730', '1184', '0452', '2080',
#     '1133', '3320', '0211', '2972', '1583', '1421', '1391', '0592', '6610', '0221', '1282', '6910',
#     '0062', '1131', '2101', '0683', '0860', '1370', '0423', '1662', '1413', '2961', '0222', '0710',
#     '3361', '0540', '0682', '2981', '2971', '1581', '0930', '1922', '1751', '6120', '2740', '1552',
#     '1502', '1433', '2430', '0132', '1720', '2092', '0342', '1412', '3230', '1183', '2672', '0593',
#     '0343', '0522', '1500', '2291', '0213', '2962', '1094', '0550', '6680', '1141', '2321', '1210',
#     '0154', '0962', '2481', '0134', '1142', '1093', '1580', '3400', '1303', '1383', '1072', '0711',
#     '2270', '2082', '2271', '1052', '1214', '1140', '1143', '0920', '2081', '1091', '1373', '2452',
#     '0864', '1752', '0214', '1050', '1393', '2320', '0212', '0931', '0151', '1423', '0064', '0021',
#     '1212', '3231', '0713', '2560', '1281', '0130', '3020', '0453', '2431', '1071', '0961', '1461',
#     '1372', '0152', '0564', '3182', '1420', '2950', '3222', '1673', '1403', '1180', '0150', '6840',
#     '1400', '1961', '2960', '2551', '1672', '1671', '2741', '1211', '1390', '0594', '2921', '1711',
#     '0714', '1660', '0731', '2112', '2421', '1451', '2562', '0020', '0220', '3041', '0923', '0862',
#     '1213', '0022', '0284', '2662', '1302', '1553', '1181', '2250', '2252', '2111', '1960', '2091',
#     '2451', '1823', '0520'
# ]
# assert not bool(set(dementia) & set(control)), set(dementia) & set(control)

__adress2020_test_spks = [
    "S160",
    "S161",
    "S162",
    "S163",
    "S164",
    "S165",
    "S166",
    "S167",
    "S168",
    "S169",
    "S170",
    "S171",
    "S172",
    "S173",
    "S174",
    "S175",
    "S176",
    "S177",
    "S178",
    "S179",
    "S180",
    "S181",
    "S182",
    "S183",
    "S184",
    "S185",
    "S186",
    "S187",
    "S188",
    "S189",
    "S190",
    "S191",
    "S192",
    "S193",
    "S194",
    "S195",
    "S196",
    "S197",
    "S198",
    "S199",
    "S200",
    "S201",
    "S202",
    "S203",
    "S204",
    "S205",
    "S206",
    "S207",
]

# map adress2020 speaker ids to pitt speaker ids
# Thanks Saturnino Luz for providing this
adress2pitt = {
    "S079": "0012",
    "S080": "0052",
    "S081": "0103",
    "S082": "0180",
    "S083": "0242",
    "S084": "0291",
    "S086": "0430",
    "S087": "0462",
    "S089": "0500",
    "S090": "0531",
    "S092": "0672",
    "S093": "0760",
    "S094": "0780",
    "S095": "0941",
    "S096": "1221",
    "S097": "1441",
    "S100": "1681",
    "S101": "1781",
    "S103": "1831",
    "S104": "1841",
    "S107": "2051",
    "S108": "2070",
    "S110": "2161",
    "S111": "2181",
    "S114": "2340",
    "S116": "2380",
    "S118": "2572",
    "S122": "2831",
    "S124": "3100",
    "S125": "3110",
    "S126": "3190",
    "S127": "3251",
    "S128": "3370",
    "S129": "3460",
    "S130": "3561",
    "S132": "3581",
    "S135": "4680",
    "S136": "4740",
    "S137": "4760",
    "S138": "4881",
    "S139": "5060",
    "S140": "5510",
    "S141": "5870",
    "S142": "5920",
    "S143": "6240",
    "S144": "6350",
    "S145": "6360",
    "S148": "6570",
    "S149": "6600",
    "S150": "6630",
    "S151": "6760",
    "S153": "6900",
    "S154": "7020",
    "S156": "7050",
    "S001": "0064",
    "S002": "0130",
    "S003": "0153",
    "S004": "0174",
    "S005": "0211",
    "S006": "0281",
    "S007": "0341",
    "S009": "0520",
    "S011": "0550",
    "S012": "0563",
    "S013": "0711",
    "S015": "0861",
    "S016": "0921",
    "S017": "0931",
    "S018": "0961",
    "S019": "1051",
    "S020": "1071",
    "S021": "1094",
    "S024": "1213",
    "S025": "1241",
    "S027": "1291",
    "S028": "1321",
    "S029": "1371",
    "S030": "1383",
    "S032": "1413",
    "S033": "1423",
    "S034": "1433",
    "S035": "1451",
    "S036": "1461",
    "S038": "1661",
    "S039": "1673",
    "S040": "1711",
    "S041": "1751",
    "S043": "2082",
    "S048": "2271",
    "S049": "2292",
    "S051": "2422",
    "S052": "2431",
    "S055": "2562",
    "S056": "2662",
    "S058": "2802",
    "S059": "2921",
    "S061": "2962",
    "S062": "2971",
    "S063": "2981",
    "S064": "2991",
    "S067": "3222",
    "S068": "3320",
    "S070": "6270",
    "S071": "6310",
    "S072": "6610",
    "S073": "6680",
    "S076": "6880",
    "S077": "6910",

    # test speakers
    "S160": "2951",
    "S161": "0540",
    "S162": "3570",
    "S163": "2321",
    "S164": "2791",
    "S165": "2131",
    "S166": "1283",
    "S167": "2680",
    "S168": "0583",
    "S169": "6390",
    "S170": "2551",
    "S171": "6810",
    "S172": "6860",
    "S173": "1811",
    "S174": "2250",
    "S175": "2093",
    "S176": "3060",
    "S177": "0450",
    "S178": "2112",
    "S179": "1480",
    "S180": "0731",
    "S181": "2640",
    "S182": "2470",
    "S183": "6840",
    "S184": "2102",
    "S185": "0491",
    "S186": "1961",
    "S187": "2350",
    "S188": "6510",
    "S189": "0351",
    "S190": "2031",
    "S191": "3690",
    "S192": "2221",
    "S193": "1502",
    "S194": "2201",
    "S195": "7090",
    "S196": "3181",
    "S197": "1403",
    "S198": "3680",
    "S199": "1181",
    "S200": "1370",
    "S201": "1141",
    "S202": "2452",
    "S203": "1643",
    "S204": "2742",
    "S205": "7040",
    "S206": "6120",
    "S207": "3020",
}

# make sure the mapping is one-to-one
assert len(list(adress2pitt.keys())) == len(set(adress2pitt.values()))

adress2020_test_spks = [adress2pitt[s] for s in __adress2020_test_spks]

# dementia_train = [s for s in dementia if s not in adress2020_test_spks]
# control_train = [s for s in control if s not in adress2020_test_spks]
# dementia_test = [s for s in dementia if s in adress2020_test_spks]
# control_test = [s for s in control if s in adress2020_test_spks]

dementia_train = ['0870', '0290', '2440', '2820', '5780', '1441', '1200', '2371', '6480', '3380', '1342',
                  '2712', '1250', '0073', '3190', '5950', '2702', '5290', '4661', '1830', '2701', '2690',
                  '6740', '1340', '5440', '6720', '2051', '1440', '0781', '1841', '1343', '4931', '3810',
                  '1202', '0512', '7050', '0232', '3421', '7070', '0910', '0332', '1541', '1840', '2931',
                  '0142', '0070', '6630', '4680', '1220', '6150', '3390', '0331', '4701', '0500', '4881',
                  '4500', '3370', '5910', '1842', '0513', '2691', '2892', '0030', '5800', '0104', '0942',
                  '6100', '1270', '5980', '1681', '2123', '2352', '6090', '7030', '0760', '2572', '4710',
                  '2372', '1723', '2831', '0330', '2220', '5300', '0572', '0291', '4580', '0102', '0531',
                  '2570', '3501', '0511', '6500', '3811', '4501', '2180', '3610', '0912', '0762', '4970',
                  '0493', '1203', '2912', '6240', '6560', '0671', '0911', '0163', '3442', '0050', '5940',
                  '3621', '5620', '3110', '0584', '1204', '1540', '0660', '3430', '2760', '3550', '0052',
                  '0071', '5730', '3500', '2520', '0580', '6070', '0164', '3581', '1641', '0012', '3460',
                  '5081', '4740', '6420', '1813', '6980', '0350', '0510', '6600', '1831', '5810', '2700',
                  '6890', '2132', '4760', '0570', '0242', '1572', '2380', '0430', '5080', '0160', '1832',
                  '3580', '0971', '3420', '0941', '1571', '6010', '4880', '2120', '2821', '7140', '3290',
                  '2212', '0571', '4660', '5850', '3100', '5510', '4650', '0300', '5110', '3340', '0230',
                  '1570', '2181', '0101', '1221', '0100', '1722', '2200', '0610', '0780', '1833', '0390',
                  '3491', '2121', '0301', '6400', '1780', '0651', '5920', '5441', '2360', '1201', '4930',
                  '5790', '2601', '2830', '6200', '2161', '0334', '3551', '4610', '5060', '5151', '2210',
                  '3490', '0241', '7110', '0581', '2790', '0460', '2230', '7020', '1781', '3620', '5270',
                  '0890', '0943', '2070', '0161', '0702', '3560', '2133', '1810', '6950', '2060', '0611',
                  '4971', '2822', '6900', '2030', '1812', '3540', '1731', '5590', '2521', '2231', '6570',
                  '0462', '2602', '2911', '5271', '2122', '1721', '3440', '0490', '2211', '0400', '5280',
                  '6350', '2160', '0672', '0871', '5040', '5630', '4920', '1642', '0652', '5870', '3410',
                  '3561', '2260', '1680', '0010', '0333', '0180', '3251', '0650', '5390', '6760', '3341',
                  '1341', '2213', '6360', '2522', '0103', '3250', '0764', '3600', '4720', '5261', '2340']
dementia_test = ['2031', '1811', '6390', '3570', '3690', '0583', '2201', '2640', '6510', '1643', '0351',
                 '3060', '2221', '1480', '0491', '2791', '3680', '6810', '2470', '2680', '2350', '2131',
                 '7040']

control_train = ['0341', '1381', '0563', '7092', '0063', '0424', '6270', '1501', '6780', '2422', '1582',
                 '2550', '1321', '2751', '1301', '6880', '2991', '2420', '2561', '2800', '0133', '2292',
                 '2661', '2660', '3221', '2480', '1411', '1051', '2801', '2670', '0863', '0922', '0340',
                 '1410', '0281', '1453', '1371', '0560', '0153', '0921', '2450', '1750', '0344', '0733',
                 '1144', '1291', '0861', '6310', '1241', '0174', '1132', '2802', '2750', '1661', '1182',
                 '0712', '1320', '1130', '1550', '0421', '1753', '2482', '1240', '0023', '3042', '1920',
                 '0210', '3180', '0422', '1710', '0680', '0730', '1184', '0452', '2080', '1133', '3320',
                 '0211', '2972', '1583', '1421', '1391', '0592', '6610', '0221', '1282', '6910', '0062',
                 '1131', '2101', '0683', '0860', '0423', '1662', '1413', '2961', '0222', '0710', '3361',
                 '0682', '2981', '2971', '1581', '0930', '1922', '1751', '2740', '1552', '1433', '2430',
                 '0132', '1720', '2092', '0342', '1412', '3230', '1183', '2672', '0593', '0343', '0522',
                 '1500', '2291', '0213', '2962', '1094', '0550', '6680', '1210', '0154', '0962', '2481',
                 '0134', '1142', '1093', '1580', '3400', '1303', '1383', '1072', '0711', '2270', '2082',
                 '2271', '1052', '1214', '1140', '1143', '0920', '2081', '1091', '1373', '0864', '1752',
                 '0214', '1050', '1393', '2320', '0212', '0931', '0151', '1423', '0064', '0021', '1212',
                 '3231', '0713', '2560', '1281', '0130', '0453', '2431', '1071', '0961', '1461', '1372',
                 '0152', '0564', '3182', '1420', '2950', '3222', '1673', '1180', '0150', '1400', '2960',
                 '1672', '1671', '2741', '1211', '1390', '0594', '2921', '1711', '0714', '1660', '2421',
                 '1451', '2562', '0020', '0220', '3041', '0923', '0862', '1213', '0022', '0284', '2662',
                 '1302', '1553', '2252', '2111', '1960', '2091', '2451', '1823', '0520']
control_test = ['2093', '2742', '0450', '1283', '2951', '2102', '3181', '7090', '6860', '1370', '0540',
                '6120', '1502', '1141', '2321', '2452', '3020', '1403', '6840', '1961', '2551', '0731',
                '2112', '1181', '2250']

# ===========================================================

train_spks = dementia_train + control_train

# NOTE: test set uses test_spks's cookie story segments, while validation set uses their other story sections
test_spks = dementia_test + control_test
assert len(test_spks) == len(__adress2020_test_spks)

assert len(train_spks) == len(set(train_spks)), f"Duplicated speakers in train"
assert len(test_spks) == len(set(test_spks)), f"Duplicated speakers in test"

# make sure there is no overlap between train and test
assert not bool(set(train_spks) & set(test_spks)), set(train_spks) & set(test_spks)

# test and val is overlapped but that's okay we use different story sections

pwa_spks = dementia_train + dementia_test
control_spks = control_train + control_test

# ======================
#        Mappings
# ======================

spk2aphasia_label = {}
for spk in pwa_spks:
    spk2aphasia_label[spk] = "APH"
for spk in control_spks:
    spk2aphasia_label[spk] = "NONAPH"

aph2spks = {}
for spk, aph in spk2aphasia_label.items():
    aph2spks.setdefault(aph, []).append(spk)


# ======================
#        Utility
# ======================


def get_utt(spk: str, story: str, start_time: int, end_time: int) -> str:
    return f"{spk}-{story}_{start_time}_{end_time}"


def utt2time(utt: str) -> (int, int):
    _, start, end = utt.split("-")[-1].split('_')
    return int(start), int(end)


def utt2spk(utt: str) -> str:
    return utt.split("-")[-2]


def utt2story(utt: str) -> str:
    return utt.split("-")[-1].split('_')[0]
